{"version":3,"file":"main-CmBM19LW.js","sources":["../../src/js/gameConstants.js","../../src/js/gameState.js","../../src/js/elementsDOM.js","../../src/js/utils.js","../../src/js/levelTabs.js","../../src/js/sequence.js","../../src/js/startRound.js","../../src/js/newGame.js","../../src/js/actionButtons.js","../../src/js/modal.js","../../src/js/createDOMTree.js","../../src/js/gameLogic.js","../../src/js/keyboard.js","../../src/js/app.js","../../src/main.js"],"sourcesContent":["export const LEVELS = [\"easy\", \"medium\", \"hard\"];\n\nexport const roundStatus = {\n  mistake: \"MISTAKE\",\n  win: \"WIN_ROUND\",\n};\n\nexport const GAME_MESSAGES = {\n  START: \"Switch to English keyboard layout\",\n  [roundStatus.win]: \"You passed the round! =)\",\n  [roundStatus.mistake]: \"You are wrong! =(\",\n  WIN: \"YOU WIN\",\n  LOSE: \"GAME OVER\",\n  CHANGE_LAYOUT:\n    \"Change the keyboard layout, please. The layout is Russian now.\",\n  SIMON_SAYS: \"Simon says: \",\n};\n\nexport const NUMBER_OF_ROUND = 5;\n\nexport const CSS_CLASSES = {\n  HIDDEN: \"display-none\",\n  [roundStatus.win]: \"outputFieldFinish\",\n  [roundStatus.mistake]: \"outputFieldMistake\",\n  HIGHLIGHT_BUTTON: \"actionButtonHighlight\",\n  BUTTON_ACTIVE: \"buttonKeyboardActive\",\n  NON_INTERACTIVE: \"no-pointer-events\",\n  OPACITY_0: \"opacity\",\n};\nexport const RUSSIAN_LAYOUT = { firstChar: \"а\", lastChar: \"я\" };\nexport const NUMBER_LAYOUT = {\n  firstCharCode: \"0\".charCodeAt(0),\n  lastCharCode: \"9\".charCodeAt(0),\n};\nexport const ENGLISH_LAYOUT = {\n  firstCharCode: \"a\".charCodeAt(0),\n  lastCharCode: \"z\".charCodeAt(0),\n};\n\nexport const ANIMATION = {\n  duration: 1000,\n  easing: \"ease-out\",\n  delay: 300,\n  transform: { base: \"scale(1)\", active: \"scale(1.2)\" },\n  background: { base: \"var(--primary-alpha)\", active: \"var(--dark)\" },\n};\n","import { LEVELS } from \"@/js/gameConstants.js\";\n\nexport const gameState = {\n  roundCounter: 0,\n  level: LEVELS[0],\n  isPlaying: false,\n  isMistake: false,\n  isPressed: false,\n  isClicked: false,\n  sequenceArray: [],\n  sequenceButtons: [],\n  sequence: \"\",\n};\n","import { LEVELS } from \"@/js/gameConstants.js\";\n\nexport const elementsDOM = {\n  actionButtons: {},\n  buttonWrapper: null,\n  keyboardWrapper: null,\n  keyboards: {\n    [LEVELS[0]]: {},\n    [LEVELS[1]]: {},\n    [LEVELS[2]]: {},\n  },\n  levelButtons: {\n    [LEVELS[0]]: {},\n    [LEVELS[1]]: {},\n    [LEVELS[2]]: {},\n  },\n  modal: {},\n  outputField: null,\n  roundCounter: null,\n  roundWrapper: null,\n};\n","import { CSS_CLASSES } from \"@/js/gameConstants.js\";\nimport { gameState } from \"@/js/gameState.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\n\n/**\n * Creates and returns a new DOM element with the specified properties.\n * @param {Object} options - The options for creating the DOM element.\n * @param {string} [options.tagName='div'] - The tag name of the element.\n * @param {string[]} [options.classList=[]] - A list of CSS classes to apply to the element.\n * @param {string} [options.textContent=''] - The text content of the element.\n * @param {Object} [options.attributes={}] - A map of attributes to set on the element.\n * @returns {HTMLElement} - The created DOM element.\n */\nexport function createDOMElement({\n  tagName = \"div\",\n  classList = [],\n  textContent = \"\",\n  attributes = {},\n} = {}) {\n  const element = document.createElement(tagName);\n  if (classList.length > 0) {\n    element.classList.add(...classList);\n  }\n  if (textContent) {\n    element.textContent = textContent;\n  }\n  if (attributes) {\n    Object.entries(attributes).forEach(([key, value]) =>\n      element.setAttribute(key, value),\n    );\n  }\n\n  return element;\n}\n\nexport function removeOutputCSS() {\n  elementsDOM.outputField.classList.remove(CSS_CLASSES.MISTAKE);\n  elementsDOM.outputField.classList.remove(CSS_CLASSES.WIN_ROUND);\n}\n\nexport function resetGame(isNew) {\n  gameState.isMistake = false;\n  elementsDOM.roundCounter.textContent = gameState.roundCounter;\n  elementsDOM.actionButtons.repeat.disabled = false;\n  removeOutputCSS();\n\n  Object.entries(elementsDOM.actionButtons).forEach(([key, value]) => {\n    const isButtonHide = isNew\n      ? key !== \"start\"\n      : key === \"start\" || key === \"next\";\n    if (isButtonHide) {\n      value.classList.add(CSS_CLASSES.HIDDEN);\n      return;\n    }\n    value.classList.remove(CSS_CLASSES.HIDDEN);\n  });\n}\n\nexport function createActionButton(buttonName, callBack, isHighlight = false) {\n  const button = createDOMElement({\n    tagName: \"button\",\n    classList: [\"button\", \"actionButton\"],\n    textContent: buttonName,\n  });\n  if (isHighlight) {\n    button.classList.add(CSS_CLASSES.HIGHLIGHT_BUTTON);\n  }\n  button.addEventListener(\"click\", callBack);\n  return button;\n}\n\nexport function disabledButtons(isDisabled, buttonsArr) {\n  buttonsArr.forEach((buttonsList) => {\n    Object.values(buttonsList).forEach((button) => {\n      if (button.textContent === \"Repeat the sequence\" && gameState.isMistake) {\n        return;\n      }\n      button.disabled = isDisabled;\n    });\n  });\n}\n","import { createDOMElement } from \"./utils.js\";\n\nimport { gameState } from \"@/js/gameState.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\nimport { CSS_CLASSES } from \"@/js/gameConstants.js\";\n\nfunction createRadioButton(id) {\n  const liElement = createDOMElement({\n    tagName: \"li\",\n  });\n  const inputElement = createDOMElement({\n    tagName: \"input\",\n    classList: [CSS_CLASSES.HIDDEN],\n    attributes: {\n      type: \"radio\",\n      name: \"level\",\n      id: id,\n    },\n  });\n  elementsDOM.levelButtons[id] = inputElement;\n  const labelElement = createDOMElement({\n    tagName: \"label\",\n    classList: [\"button\", \"tabButton\"],\n    textContent: id,\n    attributes: {\n      for: id,\n    },\n  });\n  liElement.append(inputElement, labelElement);\n  liElement.addEventListener(\"click\", () => {\n    if (inputElement.disabled) {\n      return;\n    }\n    gameState.level = id;\n  });\n  return liElement;\n}\n\nexport function createLevelList(levels) {\n  const levelList = createDOMElement({\n    tagName: \"ul\",\n    classList: [\"flex\", \"flex--justify-center\", \"flex_gap-20\", \"levelList\"],\n  });\n  const levelsButton = {};\n  const levelInputs = {};\n  levels.forEach((level) => {\n    levelsButton[level] = createRadioButton(level, levelInputs);\n  });\n  levelList.append(...Object.values(levelsButton));\n\n  return levelList;\n}\n","import { disabledButtons } from \"@/js/utils.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\nimport { gameState } from \"@/js/gameState.js\";\nimport { ANIMATION, GAME_MESSAGES } from \"@/js/gameConstants.js\";\n\nexport function showSequence(buttons) {\n  gameState.isPlaying = false;\n  let index = 0;\n\n  function showNextChar() {\n    if (index >= buttons.length) {\n      disabledButtons(false, [\n        elementsDOM.keyboards[gameState.level],\n        elementsDOM.actionButtons,\n      ]);\n      gameState.isPlaying = true;\n      return;\n    }\n    const button = buttons[index];\n\n    const animation = button.animate(\n      [\n        {\n          backgroundColor: ANIMATION.background.base,\n          transform: ANIMATION.transform.base,\n        },\n        {\n          backgroundColor: ANIMATION.background.active,\n          transform: ANIMATION.transform.active,\n        },\n        {\n          backgroundColor: ANIMATION.background.base,\n          transform: ANIMATION.transform.base,\n        },\n      ],\n      {\n        duration: ANIMATION.duration,\n        easing: ANIMATION.easing,\n        delay: ANIMATION.delay,\n      },\n    );\n\n    animation.onfinish = () => {\n      index++;\n      showNextChar();\n    };\n  }\n\n  showNextChar();\n}\n\nexport function generateSequence() {\n  const sequenceLength = gameState.roundCounter * 2;\n  const keyboard = elementsDOM.keyboards[gameState.level];\n  const maxIndex = Object.values(keyboard).length;\n  gameState.sequenceButtons = [];\n  for (let i = 0; i < sequenceLength; i++) {\n    const index = Math.floor(Math.random() * maxIndex);\n    const char = Object.keys(keyboard)[index];\n    gameState.sequenceArray.push(char);\n    gameState.sequenceButtons.push(keyboard[char]);\n  }\n  gameState.sequence = gameState.sequenceArray.join(\"\");\n  console.log(GAME_MESSAGES.SIMON_SAYS, gameState.sequenceArray);\n  showSequence(gameState.sequenceButtons);\n}\n","import { CSS_CLASSES, GAME_MESSAGES } from \"@/js/gameConstants.js\";\nimport { gameState } from \"@/js/gameState.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\nimport { generateSequence } from \"@/js/sequence.js\";\nimport { disabledButtons, resetGame } from \"@/js/utils.js\";\n\nexport function startRound() {\n  gameState.roundCounter++;\n  if (gameState.roundCounter === 1) {\n    disabledButtons(true, [elementsDOM.levelButtons]);\n    elementsDOM.roundWrapper.classList.remove(CSS_CLASSES.OPACITY_0);\n  }\n  resetGame(false);\n  disabledButtons(true, [\n    elementsDOM.keyboards[gameState.level],\n    elementsDOM.actionButtons,\n  ]);\n  elementsDOM.actionButtons.repeat.classList.remove(\n    CSS_CLASSES.HIGHLIGHT_BUTTON,\n  );\n\n  elementsDOM.outputField.textContent = GAME_MESSAGES.SIMON_SAYS;\n\n  generateSequence();\n}\n","import { CSS_CLASSES, GAME_MESSAGES } from \"@/js/gameConstants.js\";\nimport { gameState } from \"@/js/gameState.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\nimport { disabledButtons, resetGame } from \"@/js/utils.js\";\n\n/**\n * Initializes the game by selecting a new word, rendering its letters, and displaying the hint.\n *  - An object containing the DOM elements used in the game.\n */\nexport function newGame() {\n  gameState.roundCounter = 0;\n  elementsDOM.roundWrapper.classList.add(CSS_CLASSES.OPACITY_0);\n  elementsDOM.levelButtons[gameState.level].checked = true;\n  gameState.sequenceArray = [];\n  elementsDOM.outputField.textContent = GAME_MESSAGES.START;\n  disabledButtons(false, [elementsDOM.levelButtons]);\n  gameState.isPlaying = false;\n  disabledButtons(true, [elementsDOM.keyboards.hard]);\n  resetGame(true);\n}\n","import {\n  createActionButton,\n  disabledButtons,\n  removeOutputCSS,\n} from \"@/js/utils.js\";\nimport { startRound } from \"@/js/startRound.js\";\nimport { gameState } from \"@/js/gameState.js\";\nimport { newGame } from \"@/js/newGame.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\nimport { CSS_CLASSES, GAME_MESSAGES } from \"@/js/gameConstants.js\";\nimport { showSequence } from \"@/js/sequence.js\";\n\nfunction repeatHandler() {\n  if (gameState.isPressed) {\n    return;\n  }\n  disabledButtons(true, [\n    elementsDOM.keyboards[gameState.level],\n    elementsDOM.actionButtons,\n  ]);\n  showSequence(gameState.sequenceButtons);\n  gameState.isMistake = true;\n  elementsDOM.actionButtons.repeat.classList.remove(\n    CSS_CLASSES.HIGHLIGHT_BUTTON,\n  );\n  removeOutputCSS();\n  elementsDOM.outputField.textContent = GAME_MESSAGES.SIMON_SAYS;\n  gameState.sequenceArray = gameState.sequence.split(\"\");\n  elementsDOM.actionButtons.repeat.disabled = true;\n}\n\nexport function createActionButtons() {\n  const actionButtons = {};\n  actionButtons.start = createActionButton(\"start\", startRound);\n  actionButtons.newGame = createActionButton(\"newGame\", () => {\n    if (gameState.isPressed) {\n      return;\n    }\n    newGame();\n  });\n  actionButtons.repeat = createActionButton(\n    \"Repeat the sequence\",\n    repeatHandler,\n  );\n  actionButtons.next = createActionButton(\"next\", startRound, true);\n\n  return actionButtons;\n}\n","import { createActionButton, createDOMElement } from \"@/js/utils.js\";\nimport { newGame } from \"@/js/newGame.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\nimport { gameState } from \"@/js/gameState.js\";\nimport { GAME_MESSAGES } from \"@/js/gameConstants.js\";\n\nexport function showModalWindow() {\n  elementsDOM.modal.text.textContent =\n    gameState.sequenceArray.length === 0\n      ? GAME_MESSAGES.WIN\n      : GAME_MESSAGES.LOSE;\n  elementsDOM.modal.word.textContent = gameState.sequence.toUpperCase();\n  elementsDOM.modal.modal.showModal();\n}\n\nexport function createModal() {\n  const modal = createDOMElement({\n    tagName: \"dialog\",\n    classList: [\n      \"modal\",\n      \"flex\",\n      \"flex--column\",\n      \"flex--align-center\",\n      \"flex_gap-20\",\n    ],\n  });\n  const closeButton = createDOMElement({\n    tagName: \"button\",\n    classList: [\"closeButton\"],\n    textContent: \"❌\",\n  });\n  const modalButton = createActionButton(\"newGame\", () => {\n    modal.close();\n    newGame();\n  });\n\n  const modalText = createDOMElement({\n    tagName: \"p\",\n  });\n  const modalText2 = createDOMElement({\n    tagName: \"p\",\n    textContent: \"Simon says: \",\n  });\n  const secretWord = createDOMElement({\n    tagName: \"strong\",\n  });\n  modalText2.append(secretWord);\n\n  modal.append(closeButton, modalText, modalText2, modalButton);\n\n  closeButton.addEventListener(\"click\", () => modal.close());\n  modalButton.addEventListener(\"click\", () => {\n    modal.close();\n    newGame();\n  });\n\n  return {\n    modal: modal,\n    text: modalText,\n    word: secretWord,\n  };\n}\n","import { createDOMElement } from \"./utils.js\";\nimport { createLevelList } from \"@/js/levelTabs.js\";\nimport { createActionButtons } from \"@/js/actionButtons.js\";\nimport { createModal } from \"@/js/modal.js\";\nimport { GAME_MESSAGES, LEVELS } from \"@/js/gameConstants.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\n\n/**\n * Creates and appends the DOM tree for the game interface.\n * Initializes event listeners and returns references to the essential elements.\n *  An object containing references to the created DOM elements.\n */\nexport function createDOMTree() {\n  const allElements = {};\n\n  allElements.container = createDOMElement({\n    classList: [\n      \"container\",\n      \"flex\",\n      \"flex--column\",\n      \"flex--align-justify-center\",\n      \"flex_gap-30\",\n    ],\n  });\n\n  allElements.headerPrimary = createDOMElement({\n    tagName: \"h1\",\n    textContent: \"simon says\",\n    classList: [\"header-primary\"],\n  });\n\n  allElements.flexDiv = createDOMElement({\n    classList: [\"flex\", \"flex--align-justify-center\", \"flex_gap-10\", \"flexDiv\"],\n  });\n\n  allElements.roundWrapper = createDOMElement({\n    tagName: \"p\",\n    textContent: \"Round: \",\n    classList: [\"roundWrapper\"],\n  });\n  allElements.roundCounter = createDOMElement({\n    tagName: \"span\",\n    textContent: \"0\",\n    classList: [\"counter-text\"],\n  });\n  allElements.roundText = createDOMElement({\n    tagName: \"span\",\n    textContent: \" / 5\",\n    classList: [\"counter-text\"],\n  });\n\n  allElements.roundWrapper.append(\n    allElements.roundCounter,\n    allElements.roundText,\n  );\n\n  allElements.levelList = createLevelList(LEVELS);\n\n  allElements.keyboardWrapper = createDOMElement({\n    classList: [\n      \"flex\",\n      \"flex--wrap\",\n      \"flex_gap-10\",\n      \"keyboardWrapper\",\n      \"flex--align-justify-center\",\n    ],\n  });\n\n  allElements.outputField = createDOMElement({\n    tagName: \"p\",\n    classList: [\"outputField\"],\n    textContent: GAME_MESSAGES.START,\n  });\n\n  allElements.buttonWrapper = createDOMElement({\n    classList: [\"flex\", \"flex_gap-20\", \"flex--align-justify-center\"],\n  });\n\n  allElements.actionButtons = createActionButtons();\n  allElements.buttonWrapper.append(...Object.values(allElements.actionButtons));\n\n  allElements.flexDiv.append(allElements.outputField, allElements.roundWrapper);\n\n  allElements.container.append(\n    allElements.headerPrimary,\n    allElements.flexDiv,\n    allElements.levelList,\n    allElements.keyboardWrapper,\n    allElements.buttonWrapper,\n  );\n\n  allElements.modal = createModal();\n  document.body.append(allElements.container, allElements.modal.modal);\n\n  elementsDOM.keyboardWrapper = allElements.keyboardWrapper;\n  elementsDOM.roundCounter = allElements.roundCounter;\n  elementsDOM.roundWrapper = allElements.roundWrapper;\n  elementsDOM.actionButtons = allElements.actionButtons;\n  elementsDOM.modal = allElements.modal;\n  elementsDOM.outputField = allElements.outputField;\n  elementsDOM.buttonWrapper = allElements.buttonWrapper;\n}\n","import {\n  CSS_CLASSES,\n  GAME_MESSAGES,\n  NUMBER_OF_ROUND,\n  roundStatus,\n} from \"@/js/gameConstants.js\";\nimport { gameState } from \"@/js/gameState.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\nimport { disabledButtons } from \"@/js/utils.js\";\nimport { showModalWindow } from \"@/js/modal.js\";\n\nfunction updateRoundStatusUI(isMistake) {\n  const repeatClass = isMistake\n    ? CSS_CLASSES.HIGHLIGHT_BUTTON\n    : CSS_CLASSES.HIDDEN;\n  const result = isMistake ? roundStatus.mistake : roundStatus.win;\n  if (isMistake) {\n    gameState.isMistake = isMistake;\n  } else {\n    elementsDOM.actionButtons.next.classList.remove(CSS_CLASSES.HIDDEN);\n  }\n\n  elementsDOM.outputField.textContent = GAME_MESSAGES[result];\n  elementsDOM.outputField.classList.add(CSS_CLASSES[result]);\n  elementsDOM.actionButtons.repeat.classList.add(repeatClass);\n  gameState.isPlaying = false;\n  disabledButtons(true, [elementsDOM.keyboards[gameState.level]]);\n}\n\nfunction checkGameOver() {\n  if (gameState.sequenceArray.length !== 0) {\n    return;\n  }\n  gameState.isPlaying = false;\n  if (gameState.roundCounter !== NUMBER_OF_ROUND) {\n    updateRoundStatusUI(false);\n  } else {\n    elementsDOM.actionButtons.repeat.disabled = true;\n    showModalWindow();\n  }\n}\n\n/**\n * Handles the core game logic: checks the entered character, updates the game state,\n * and ends the game if necessary.\n - The button corresponding to the entered character.\n */\nexport function gameLogic(pressedChar) {\n  const isGuessed = pressedChar === gameState.sequenceArray[0];\n  if (!isGuessed && gameState.isMistake) {\n    showModalWindow();\n  }\n  if (!isGuessed) {\n    updateRoundStatusUI(true);\n  } else {\n    elementsDOM.outputField.textContent += pressedChar;\n    gameState.sequenceArray.shift();\n  }\n  checkGameOver();\n}\n","import { createDOMElement } from \"./utils.js\";\nimport { gameLogic } from \"@/js/gameLogic.js\";\nimport {\n  CSS_CLASSES,\n  ENGLISH_LAYOUT,\n  GAME_MESSAGES,\n  LEVELS,\n  NUMBER_LAYOUT,\n  RUSSIAN_LAYOUT,\n} from \"@/js/gameConstants.js\";\nimport { gameState } from \"@/js/gameState.js\";\nimport { elementsDOM } from \"@/js/elementsDOM.js\";\n\nlet keyPressed;\n\nfunction toggleKeyboardState(isPressed, type, isTrusted = true) {\n  elementsDOM.keyboardWrapper.classList.toggle(\n    CSS_CLASSES.NON_INTERACTIVE,\n    isPressed,\n  );\n\n  if (!isTrusted) {\n    return;\n  }\n\n  if (type === \"mouse\") {\n    gameState.isClicked = isPressed;\n  } else {\n    gameState.isPressed = isPressed;\n  }\n}\n\nfunction keyDownHandler(event) {\n  if (gameState.isPressed || !gameState.isPlaying || gameState.isClicked) {\n    return;\n  }\n\n  keyPressed = event.key.toLowerCase();\n\n  if (\n    keyPressed >= RUSSIAN_LAYOUT.firstChar &&\n    keyPressed <= RUSSIAN_LAYOUT.lastChar\n  ) {\n    console.log(GAME_MESSAGES.CHANGE_LAYOUT);\n    return;\n  }\n\n  if (!elementsDOM.keyboards[gameState.level][keyPressed]) {\n    return;\n  }\n\n  const keyElement = elementsDOM.keyboards[gameState.level][keyPressed];\n  keyElement.classList.add(CSS_CLASSES.BUTTON_ACTIVE);\n\n  toggleKeyboardState(true, \"keyboard\");\n\n  const mouseDownEvent = new MouseEvent(\"mousedown\");\n  keyElement.dispatchEvent(mouseDownEvent);\n}\n\nfunction keyUpHandler(event) {\n  if (keyPressed !== event.key.toLowerCase() || !gameState.isPressed) {\n    return;\n  }\n\n  elementsDOM.keyboards[gameState.level][keyPressed].classList.remove(\n    CSS_CLASSES.BUTTON_ACTIVE,\n  );\n\n  toggleKeyboardState(false, \"keyboard\");\n}\n\nfunction mouseDownHandler(event, char) {\n  if (event.button !== 0 || (gameState.isPressed && event.isTrusted)) {\n    return;\n  }\n\n  toggleKeyboardState(true, \"mouse\", event.isTrusted);\n\n  gameLogic(char);\n}\n\nfunction mouseUpHandler(event) {\n  if (!(gameState.isClicked && event.button === 0) || gameState.isPressed) {\n    return;\n  }\n  toggleKeyboardState(false, \"mouse\");\n}\n\nfunction renderKey(charCode, keyboadElements, keyboardType) {\n  const char = String.fromCharCode(charCode);\n  const keyElement = createDOMElement({\n    tagName: \"button\",\n    classList: [\"button\", \"buttonKeyboard\"],\n  });\n  const keyText = createDOMElement({\n    tagName: \"p\",\n    classList: [\"keyboardText\"],\n    textContent: char,\n  });\n\n  keyElement.append(keyText);\n  keyboadElements[LEVELS[2]][char] = keyElement;\n  keyboadElements[keyboardType][char] = keyElement;\n\n  keyElement.addEventListener(\"mousedown\", (event) => {\n    mouseDownHandler(event, char);\n  });\n  return keyElement;\n}\n\nfunction renderKeyboard(elements) {\n  const wrappers = {};\n  wrappers.numbers = createDOMElement({\n    classList: [\"numbers\", \"flex\", \"flex--wrap\", \"flex_gap-10\"],\n  });\n  wrappers.letters = createDOMElement({\n    classList: [\"letters\", \"flex\", \"flex--wrap\", \"flex_gap-10\"],\n  });\n  elements.keyboardWrapper.append(wrappers.numbers, wrappers.letters);\n\n  const layouts = [\n    { range: NUMBER_LAYOUT, wrapper: wrappers.numbers, level: LEVELS[0] },\n    { range: ENGLISH_LAYOUT, wrapper: wrappers.letters, level: LEVELS[1] },\n  ];\n\n  layouts.forEach((layout) => {\n    for (\n      let i = layout.range.firstCharCode;\n      i <= layout.range.lastCharCode;\n      i++\n    ) {\n      const keyElement = renderKey(i, elements.keyboards, layout.level);\n      layout.wrapper.append(keyElement);\n    }\n  });\n}\n\nexport function keyboard() {\n  renderKeyboard(elementsDOM);\n  window.addEventListener(\"keydown\", keyDownHandler);\n  window.addEventListener(\"keyup\", keyUpHandler);\n  window.addEventListener(\"mouseup\", mouseUpHandler);\n}\n","import { createDOMTree } from \"./createDOMTree.js\";\nimport { keyboard } from \"./keyboard.js\";\nimport { newGame } from \"./newGame.js\";\n\nexport function app() {\n  createDOMTree();\n  keyboard();\n  newGame();\n}\n","import { app } from './js/app.js';\n\napp();\n"],"names":["LEVELS","roundStatus","GAME_MESSAGES","NUMBER_OF_ROUND","CSS_CLASSES","RUSSIAN_LAYOUT","NUMBER_LAYOUT","ENGLISH_LAYOUT","ANIMATION","gameState","elementsDOM","createDOMElement","tagName","classList","textContent","attributes","element","key","value","removeOutputCSS","resetGame","isNew","createActionButton","buttonName","callBack","isHighlight","button","disabledButtons","isDisabled","buttonsArr","buttonsList","createRadioButton","id","liElement","inputElement","labelElement","createLevelList","levels","levelList","levelsButton","level","showSequence","buttons","index","showNextChar","animation","generateSequence","sequenceLength","keyboard","maxIndex","i","char","startRound","newGame","repeatHandler","createActionButtons","actionButtons","showModalWindow","createModal","modal","closeButton","modalButton","modalText","modalText2","secretWord","createDOMTree","allElements","updateRoundStatusUI","isMistake","repeatClass","result","checkGameOver","gameLogic","pressedChar","isGuessed","keyPressed","toggleKeyboardState","isPressed","type","isTrusted","keyDownHandler","event","keyElement","mouseDownEvent","keyUpHandler","mouseDownHandler","mouseUpHandler","renderKey","charCode","keyboadElements","keyboardType","keyText","renderKeyboard","elements","wrappers","layout","app"],"mappings":"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"}